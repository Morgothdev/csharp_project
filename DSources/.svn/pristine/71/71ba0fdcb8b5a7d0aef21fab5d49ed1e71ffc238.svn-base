using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using NMock2;
using System.Collections.Generic;

namespace DSources.Data
{
    [TestClass]
    public class ColumnTest
    {
        Mockery mockery;


        [TestInitialize]
        public void SetUp(){
            mockery = new Mockery();
        }

        [TestCleanup]
        public void CleanUp(){
            mockery.VerifyAllExpectationsHaveBeenMet();
        }

        
        Cell CreateCell(object value){
            Cell result = (Cell)mockery.NewMock(typeof(Cell));
            Expect.AtLeastOnce.On(result).GetProperty("Value").Will(Return.Value(value));
            return result;
        }




        [TestMethod]
        [TestCategory("Column")]
        [TestCategory("Not implemented")]
        public void TestEqualsColumns()
        {
            IList<Cell> cellsList = new List<Cell>();
            //Column col1 = new Column { Cells = cellsList };
            
            Assert.Inconclusive("Not implemented");
        }


        [TestMethod]
        [TestCategory("Column")]
        [TestCategory("Not implemented")]
        public void TestCloningColumns()
        {
            Assert.Inconclusive("Not implemented");
        }

        [TestMethod]
        [TestCategory("Column")]
        [TestCategory("Not implemented")]
        public void TestColumnsIteratorNotNull()
        {
            Assert.Inconclusive("Not implemented");
        }

        [TestMethod]
        [TestCategory("Column")]
        [TestCategory("Not implemented")]
        public void TestColumnsConstructorSettingAllProperies()
        {
            Assert.Inconclusive("Not implemented");
        }
    }
}
