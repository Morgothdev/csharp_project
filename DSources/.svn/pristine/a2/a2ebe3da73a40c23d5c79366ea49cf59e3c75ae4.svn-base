using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using NMock2;

namespace DSources.Data
{
    [TestClass]
    public class CellsIteratorTest
    {

        Mockery mockery;
        CellsIteratorImpl tested;
        DataModel mockedDataModel;

        [TestInitialize]
        public void SetUp()
        {
            mockery = new Mockery();
            tested = new CellsIteratorImpl();
            mockedDataModel = (DataModel)mockery.NewMock(typeof(DataModel));
            Expect.AtMost(100).On(mockedDataModel).GetProperty("ColumnsCount").Will(Return.Value(0));
        }

        [TestCleanup]
        public void CleanUp()
        {
            mockery.VerifyAllExpectationsHaveBeenMet();
        }

        [TestMethod]
        [TestCategory("CellsIteratorImpl")]
        [TestCategory("Implemented")]
        public void TestFalseIfNoData()
        {
            Assert.IsFalse(tested.HasNextInRow());
            Assert.IsFalse(tested.HasPreviousInRow());
            Assert.IsFalse(tested.HasNextInColumn());
            Assert.IsFalse(tested.HasPreviousInColumn());
        }

        [TestMethod]
        [TestCategory("CellsIteratorImpl")]
        [TestCategory("Not implemented")]
        public void TestFalseIfNoData()
        {
            Assert.IsFalse(tested.HasNextInRow());
            Assert.IsFalse(tested.HasPreviousInRow());
            Assert.IsFalse(tested.HasNextInColumn());
            Assert.IsFalse(tested.HasPreviousInColumn());
        }


    }
}
