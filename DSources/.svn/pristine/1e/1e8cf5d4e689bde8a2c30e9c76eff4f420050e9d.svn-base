using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using UDM;

namespace DSources.Parsers
{
    internal class AbstractParser : InternalParser
    {
        private ParserInfo _arguments = new ParserInfo();

        protected ParserCore ParserCore { get; set; }

        public ParserInfo Arguments { get { return _arguments; } }

        public virtual bool IsFinal { get { Console.WriteLine("abstract is final"); return false; } }

        public virtual bool IsValid { get { return false; } }

        public AbstractParser() { }

        public virtual Table Parse()
        {
            throw new NotImplementedException();
        }

        public virtual InternalParser ClonePrototype()
        {
            throw new NotImplementedException();
        }

        public virtual void ConfigureItSelf(Logic.ParserConfiguration configuration)
        {
            throw new NotImplementedException();
        }

        public virtual void Init()
        {
            ParserArgumentInfo column_count = new ParserArgumentInfo("Column count", ArgType.Number,"Count of columns in table.");
            ParserArgumentInfo column_object_types = new ParserArgumentInfo("Object type in columns", ArgType.Text,"List of object types in columns, in format: \"<object_type> , <object_type> , (...)\" where <object_type> is one of: Text, Number, Date");  
            ParserArgumentInfo columns_roles = new ParserArgumentInfo("Columns roles list",ArgType.Text,"List of role of each column, in format: \"<role> , <role> , (...)\" where <role> is one of: Fact, Dimension");
            Arguments.AddArgument(column_count);
            Arguments.AddArgument(column_object_types);
            Arguments.AddArgument(columns_roles);
        }
    }
}
